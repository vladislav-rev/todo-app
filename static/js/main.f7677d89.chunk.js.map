{"version":3,"sources":["components/Navbar.tsx","components/TodoForm.tsx","components/TodoList.tsx","pages/TodosPage.tsx","pages/AboutPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","className","href","to","TodoForm","props","ref","useRef","type","id","placeholder","onKeyPress","event","key","onAdd","current","value","htmlFor","TodoList","todos","onRemove","onToggle","length","map","todo","classes","completed","push","join","checked","onChange","bind","title","onClick","TodosPage","useState","JSON","parse","localStorage","getItem","setTodos","useEffect","setItem","stringify","newTodo","Date","now","prev","window","confirm","filter","AboutPage","history","useHistory","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAEaA,EAAkC,kBAC7C,8BACE,sBAAKC,UAAU,kCAAf,UACE,mBAAGC,KAAK,IAAID,UAAU,aAAtB,wBAGA,qBAAIA,UAAU,6BAAd,UACE,6BACE,cAAC,IAAD,CAASE,GAAG,IAAZ,0BAEF,6BACE,cAAC,IAAD,CAASA,GAAG,SAAZ,iC,+BCPGC,EAAqC,SAACC,GACjD,IAAMC,EAAMC,iBAAyB,MAOrC,OACE,sBAAKN,UAAU,kBAAf,UACE,uBACEK,IAAKA,EACLE,KAAK,OACLC,GAAG,QACHC,YAAY,eACZC,WAbkB,SAACC,GACL,UAAdA,EAAMC,MACRR,EAAMS,MAAMR,EAAIS,QAASC,OACzBV,EAAIS,QAASC,MAAQ,OAYrB,uBAAOC,QAAQ,QAAf,8BCdOC,EAAoC,SAAC,GAI3C,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,SACAC,EACI,EADJA,SAEA,OAAqB,IAAjBF,EAAMG,OACD,mBAAGrB,UAAU,SAAb,2BAGP,6BACGkB,EAAMI,KAAI,SAACC,GACV,IAAMC,EAAU,CAAC,QAIjB,OAHID,EAAKE,WACPD,EAAQE,KAAK,aAGb,qBAAI1B,UAAWwB,EAAQG,KAAK,KAA5B,UACE,kCACE,uBACEpB,KAAK,WACLqB,QAASL,EAAKE,UACdI,SAAUT,EAASU,KAAK,KAAMP,EAAKf,MAErC,+BAAOe,EAAKQ,WAEd,mBACE/B,UAAU,0BACVgC,QAAS,kBAAMb,EAASI,EAAKf,KAF/B,sBATqCe,EAAKf,UCrBzCyB,EAAsB,WACjC,MAA0BC,oBAAkB,WAC1C,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,SADrD,mBAAOpB,EAAP,KAAcqB,EAAd,KAIAC,qBAAU,WACRH,aAAaI,QAAQ,QAASN,KAAKO,UAAUxB,MAC5C,CAACA,IA0BJ,OACE,qCACE,cAAC,EAAD,CAAUL,MA1BK,SAACkB,GAClB,IAAMY,EAAiB,CACrBZ,MAAOA,EACPvB,GAAIoC,KAAKC,MACTpB,WAAW,GAEbc,GAAS,SAACO,GAAD,OAAWH,GAAX,mBAAuBG,UAqB9B,cAAC,EAAD,CACE5B,MAAOA,EACPE,SArBgB,SAACZ,GACrB+B,GAAS,SAACO,GAAD,OACPA,EAAKxB,KAAI,SAACC,GAAD,mBAAC,eACLA,GADI,IAEPE,UAAWF,EAAKf,KAAOA,GAAMe,EAAKE,UAAYF,EAAKE,mBAkBnDN,SAdgB,SAACX,GACDuC,OAAOC,QACzB,8CAGAT,GAAS,SAACO,GAAD,OAAUA,EAAKG,QAAO,SAAC1B,GAAD,OAAUA,EAAKf,KAAOA,eChC9C0C,EAAsB,WACjC,IAAMC,EAAUC,cAChB,OACE,qCACE,kDACA,mQAMA,wBAAQpD,UAAU,MAAMgC,QAAS,kBAAMmB,EAAQzB,KAAK,MAApD,uCCMS2B,EAdsB,WACnC,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,qBAAKrD,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsD,KAAK,IAAIC,OAAK,EAACC,UAAWvB,IACjC,cAAC,IAAD,CAAOqB,KAAK,SAASC,OAAK,EAACC,UAAWN,aCEjCO,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f7677d89.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nexport const Navbar: React.FunctionComponent = () => (\r\n  <nav>\r\n    <div className=\"nav-wrapper blue lighten-2 px1 \">\r\n      <a href=\"/\" className=\"brand-logo\">\r\n        React Todo\r\n      </a>\r\n      <ul className=\"right hide-on-med-and-down\">\r\n        <li>\r\n          <NavLink to=\"/\">Todo List </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/about\">About as</NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n);\r\n","import React, { useRef } from \"react\";\r\n\r\ninterface ITodoFormProps {\r\n  onAdd(title: string): void;\r\n}\r\n\r\nexport const TodoForm: React.FC<ITodoFormProps> = (props) => {\r\n  const ref = useRef<HTMLInputElement>(null);\r\n  const KeyPressHandler = (event: React.KeyboardEvent) => {\r\n    if (event.key === \"Enter\") {\r\n      props.onAdd(ref.current!.value);\r\n      ref.current!.value = \"\";\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"input-field mt2\">\r\n      <input\r\n        ref={ref}\r\n        type=\"text\"\r\n        id=\"title\"\r\n        placeholder=\"Set the task\"\r\n        onKeyPress={KeyPressHandler}\r\n      />\r\n      <label htmlFor=\"title\">Set the task</label>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ITodo } from \"../interface\";\r\n\r\ntype TodoListProps = {\r\n  todos: ITodo[];\r\n  onToggle(id: number): void;\r\n  onRemove(id: number): void;\r\n};\r\n\r\nexport const TodoList: React.FC<TodoListProps> = ({\r\n  todos,\r\n  onRemove,\r\n  onToggle,\r\n}) => {\r\n  if (todos.length === 0) {\r\n    return <p className=\"center\">No tasks yet!</p>;\r\n  }\r\n  return (\r\n    <ul>\r\n      {todos.map((todo) => {\r\n        const classes = [\"todo\"];\r\n        if (todo.completed) {\r\n          classes.push(\"completed\");\r\n        }\r\n        return (\r\n          <li className={classes.join(\" \")} key={todo.id}>\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={todo.completed}\r\n                onChange={onToggle.bind(null, todo.id)}\r\n              />\r\n              <span>{todo.title}</span>\r\n            </label>\r\n            <i\r\n              className=\"material-icons red-text\"\r\n              onClick={() => onRemove(todo.id)}\r\n            >\r\n              delete\r\n            </i>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { TodoForm } from \"../components/TodoForm\";\r\nimport { TodoList } from \"../components/TodoList\";\r\nimport { ITodo } from \"../interface\";\r\nexport const TodosPage: React.FC = () => {\r\n  const [todos, setTodos] = useState<ITodo[]>(() => {\r\n    return JSON.parse(localStorage.getItem(\"todos\") || \"[]\") as ITodo[];\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  const addHandler = (title: string) => {\r\n    const newTodo: ITodo = {\r\n      title: title,\r\n      id: Date.now(),\r\n      completed: false,\r\n    };\r\n    setTodos((prev) => [newTodo, ...prev]);\r\n  };\r\n  const toggleHandler = (id: number) => {\r\n    setTodos((prev) =>\r\n      prev.map((todo) => ({\r\n        ...todo,\r\n        completed: todo.id === id ? !todo.completed : todo.completed,\r\n      }))\r\n    );\r\n  };\r\n  const removeHandler = (id: number) => {\r\n    const shoudRemove = window.confirm(\r\n      \"Are you sure you want to delete the task?\"\r\n    );\r\n    if (shoudRemove) {\r\n      setTodos((prev) => prev.filter((todo) => todo.id !== id));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <TodoForm onAdd={addHandler} />\r\n      <TodoList\r\n        todos={todos}\r\n        onToggle={toggleHandler}\r\n        onRemove={removeHandler}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport const AboutPage: React.FC = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <>\r\n      <h1>Information Page</h1>\r\n      <p>\r\n        Lorem, ipsum dolor sit amet consectetur adipisicing elit. Animi\r\n        consequatur quaerat quibusdam perferendis dicta culpa incidunt! Facere\r\n        fugiat, quia sequi eius autem dolore reprehenderit id placeat, corporis,\r\n        provident ex enim.\r\n      </p>\r\n      <button className=\"btn\" onClick={() => history.push(\"/\")}>\r\n        Back to the todo list\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n","import { Navbar } from \"./components/Navbar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { TodosPage } from \"./pages/TodosPage\";\nimport { AboutPage } from \"./pages/AboutPage\";\n\nconst App: React.FunctionComponent = () => {\n  return (\n    <Router>\n      <Navbar />\n      <div className=\"container\">\n        <Switch>\n          <Route path=\"/\" exact component={TodosPage} />\n          <Route path=\"/about\" exact component={AboutPage} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}